plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


allprojects {
	group = 'shinhan'
	version = '0.0.1-SNAPSHOT'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		annotationProcessor 'org.projectlombok:lombok'
		compileOnly group: 'org.projectlombok', name: 'lombok'
		implementation group: 'com.mysql', name: 'mysql-connector-j'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.amqp:spring-rabbit-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
		implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}

	tasks.named('bootJar') { //빌드할 때 bootjar 파일로 하겠다는 의미
		enabled = false
	}

	tasks.named('jar') { //빌드할 때 jar 파일로 하겠다는 의미
		enabled = true
	}

}

project(':server-common') { // 컴파일 시 multi-module-database 로딩

	dependencies {
	}
}

project(':server-child') { // 컴파일 시 multi-module-database 로딩
	dependencies {
		implementation project(':server-common')
	}
}

project(':server-parent') { // 컴파일 시 server-parent 로딩
	dependencies {
		implementation project(':server-common')
	}
}